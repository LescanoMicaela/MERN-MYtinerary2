{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\node_modules\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\node_modules\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\node_modules\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\node_modules\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\node_modules\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\src\\\\components\\\\Itinerary.js\";\nimport React from 'react';\nimport Header from './CityButton';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../store/actions/itineraryActions';\nimport Loader from './Loader';\nimport './itineray.css';\n\nvar Itinerary =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Itinerary, _React$Component);\n\n  function Itinerary() {\n    var _this;\n\n    _classCallCheck(this, Itinerary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Itinerary).call(this));\n    _this.state = {\n      input: '',\n      city: ''\n    };\n    return _this;\n  }\n\n  _createClass(Itinerary, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var getParameter = window.location.href.split(\"/itinerary/\")[1];\n      var makeUrl = \"/api/itineraries/\".concat(getParameter);\n      this.props.fetchData(makeUrl);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //Destructuring props to use for conditional rendering\n      var _this$props = this.props,\n          itineraryHasErrored = _this$props.itineraryHasErrored,\n          itineraryIsLoading = _this$props.itineraryIsLoading;\n      console.log(\"holi\", this.props);\n      var filteredCityList = this.props.cities.filter(function (city) {\n        return city.name.toLowerCase() === _this2.props.match.params.city;\n      }).map(function (city) {\n        return React.createElement(Header, {\n          key: city._id,\n          name: city.name,\n          image: city.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"contentCities\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, itineraryHasErrored && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Sorry! There was an error loading the items\"), itineraryIsLoading && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), !itineraryHasErrored && !itineraryIsLoading && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"citiesList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, filteredCityList), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Available MYtineraries\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, ItinerarySection(this.props.itinerary[0]))));\n    }\n  }]);\n\n  return Itinerary;\n}(React.Component); // we take the state and map it to the props of this component\n//with state we get acces to the state of the store\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state);\n  return {\n    itinerary: state.itinerary,\n    itineraryHasErrored: state.itinerarysHasErrored,\n    itineraryIsLoading: state.itineraryIsLoading,\n    cities: state.cities\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchData: function fetchData(url) {\n      return dispatch(actionCreator.fetchCities(url));\n    }\n  };\n};\n\nvar ItinerarySection = function ItinerarySection(props) {\n  return React.createElement(\"div\", {\n    className: \"singleItinerary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, props.details.title), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, props.details.rating), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, props.details.time), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, props.details.price)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"hastags\")), React.createElement(\"div\", {\n    className: \"profileInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, props.author.name), React.createElement(\"img\", {\n    className: \"img-circled\",\n    src: props.author.photo,\n    alt: props.author.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"View all\")));\n}; //connect is a function that return a higher oder componets and wraps our Cities component.\n// we pass mapstatetoprops to our connect, so when when we connect to redux\n//knows what data we want to grab from redux and the prop we wnat to create to apply this data to it\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);","map":{"version":3,"sources":["C:\\Users\\lesca\\Desktop\\mytinerary\\client\\src\\components\\Itinerary.js"],"names":["React","Header","connect","actionCreator","Loader","Itinerary","state","input","city","getParameter","window","location","href","split","makeUrl","props","fetchData","itineraryHasErrored","itineraryIsLoading","console","log","filteredCityList","cities","filter","name","toLowerCase","match","params","map","_id","image","ItinerarySection","itinerary","Component","mapStateToProps","itinerarysHasErrored","mapDispatchToProps","dispatch","url","fetchCities","details","title","rating","time","price","author","photo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Header from './CityButton';\r\nimport { connect } from 'react-redux';\r\nimport * as  actionCreator  from '../store/actions/itineraryActions';\r\nimport Loader from './Loader';\r\nimport './itineray.css';\r\n\r\nclass Itinerary extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n          input: '',\r\n          city: ''\r\n        }\r\n      }\r\n    \r\n    componentDidMount(){\r\n        const getParameter = window.location.href.split(\"/itinerary/\")[1];  \r\n        let makeUrl = `/api/itineraries/${getParameter}`;\r\n        \r\n        this.props.fetchData(makeUrl);\r\n    }\r\n    render(){\r\n        //Destructuring props to use for conditional rendering\r\n        const{itineraryHasErrored,itineraryIsLoading} = this.props;\r\n        console.log(\"holi\", this.props)\r\n        let filteredCityList = this.props.cities\r\n        .filter(city => city.name.toLowerCase() === this.props.match.params.city)\r\n        .map((city) => <Header key={city._id}name={city.name} image={city.image} />);\r\n        \r\n        return(\r\n            <div className='contentCities'>\r\n            {itineraryHasErrored && <p>Sorry! There was an error loading the items</p>}\r\n           { itineraryIsLoading &&  <Loader />}\r\n           {!itineraryHasErrored && !itineraryIsLoading &&\r\n           <React.Fragment>\r\n               <div className='citiesList'>\r\n                {filteredCityList}\r\n                </div>\r\n                <h2>Available MYtineraries</h2>\r\n                <div>\r\n                    {ItinerarySection(this.props.itinerary[0])}\r\n                </div>\r\n           </React.Fragment>\r\n            \r\n           }\r\n       </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// we take the state and map it to the props of this component\r\n//with state we get acces to the state of the store\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        itinerary: state.itinerary,\r\n        itineraryHasErrored: state.itinerarysHasErrored,\r\n        itineraryIsLoading: state.itineraryIsLoading,\r\n        cities : state.cities\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchData: (url) => dispatch(actionCreator.fetchCities(url))\r\n        };\r\n    };\r\n\r\nconst ItinerarySection = (props) => {\r\n    return(\r\n        <div className='singleItinerary'>\r\n            <div>\r\n                <div>\r\n                    <h1>{props.details.title}</h1>\r\n                    <div>\r\n                        <p>{props.details.rating}</p>\r\n                        <p>{props.details.time}</p>\r\n                        <p>{props.details.price}</p>\r\n                    </div>\r\n                    <p>hastags</p>\r\n                </div>\r\n            <div className='profileInfo'>\r\n                <h1>{props.author.name}</h1>\r\n                <img className='img-circled' src={props.author.photo} alt={props.author.name}/>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <a href='#'>View all</a>\r\n        </div>\r\n    </div>\r\n    )\r\n    \r\n}\r\n\r\n//connect is a function that return a higher oder componets and wraps our Cities component.\r\n// we pass mapstatetoprops to our connect, so when when we connect to redux\r\n//knows what data we want to grab from redux and the prop we wnat to create to apply this data to it\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);\r\n"]},"metadata":{},"sourceType":"module"}