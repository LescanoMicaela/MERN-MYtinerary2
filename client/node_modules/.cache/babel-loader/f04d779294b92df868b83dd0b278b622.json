{"ast":null,"code":"import fetch from 'cross-fetch';\nexport var getCities = function getCities(cities) {\n  return {\n    type: 'GET_CITIES',\n    cities: cities\n  };\n};\n{\n  /*\r\n    export const getAllCities= (dispatch) => {\r\n     return fetch('/api/cities')\r\n     .then(response => {\r\n        return response.json();\r\n     })\r\n     .catch(error => {\r\n       console.log(error);\r\n     });\r\n   }\r\n  \r\n   \r\n  export const loadCities= () => {  \r\n     return function(dispatch) {\r\n       return getAllCities().then(cities => {\r\n         dispatch(getCities(cities));\r\n       }).catch(error => {\r\n         throw(error);\r\n       });\r\n     };\r\n   }\r\n  */\n}\nexport function fetchCities(dispatch) {\n  return function (dispatch) {\n    return fetch('/api/cities').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return dispatch(getCities(json));\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\lesca\\Desktop\\mytinerary\\client\\src\\store\\actions\\actions.js"],"names":["fetch","getCities","cities","type","fetchCities","dispatch","then","response","json"],"mappings":"AACA,OAAOA,KAAP,MAAkB,aAAlB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAY;AAAC,SAAO;AAACC,IAAAA,IAAI,EAAE,YAAP;AAAoBD,IAAAA,MAAM,EAAGA;AAA7B,GAAP;AAA6C,CAA5E;AAEP;AAAC;;;;;;;;;;;;;;;;;;;;;;AAqBE;AAMH,OAAO,SAASE,WAAT,CAAqBC,QAArB,EAA+B;AACpC,SAAO,UAAAA,QAAQ,EAAI;AACjB,WAAOL,KAAK,CAAC,aAAD,CAAL,CACJM,IADI,CACC,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADT,EAEJF,IAFI,CAEC,UAAAE,IAAI;AAAA,aAAIH,QAAQ,CAACJ,SAAS,CAACO,IAAD,CAAV,CAAZ;AAAA,KAFL,CAAP;AAGD,GAJD;AAKD","sourcesContent":["\r\nimport fetch from 'cross-fetch'\r\n\r\nexport const getCities = (cities) => {return {type: 'GET_CITIES',cities : cities} }\r\n\r\n{/*\r\n   export const getAllCities= (dispatch) => {\r\n    return fetch('/api/cities')\r\n    .then(response => {\r\n       return response.json();\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n \r\n  \r\n export const loadCities= () => {  \r\n    return function(dispatch) {\r\n      return getAllCities().then(cities => {\r\n        dispatch(getCities(cities));\r\n      }).catch(error => {\r\n        throw(error);\r\n      });\r\n    };\r\n  }\r\n*/}\r\n\r\n\r\n\r\n\r\n  \r\nexport function fetchCities(dispatch) {\r\n  return dispatch => {\r\n    return fetch('/api/cities')\r\n      .then(response => response.json())\r\n      .then(json => dispatch(getCities(json)))\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}