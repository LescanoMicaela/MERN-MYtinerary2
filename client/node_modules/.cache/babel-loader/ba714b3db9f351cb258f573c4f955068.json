{"ast":null,"code":"import fetch from 'cross-fetch';\nexport function itemsHasErrored(bool) {\n  return {\n    type: 'ITEMS_HAS_ERRORED',\n    hasErrored: bool\n  };\n}\nexport function itemsIsLoading(bool) {\n  return {\n    type: 'ITEMS_IS_LOADING',\n    isLoading: bool\n  };\n}\nexport function itemsFetchDataSuccess(cities) {\n  return {\n    type: 'ITEMS_FETCH_DATA_SUCCESS',\n    city: city\n  };\n}\nexport function fetchCities(url) {\n  return function (dispatch) {\n    dispatch(itemsIsLoading(true));\n    fetch(url).then(function (response) {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      dispatch(itemsIsLoading(false));\n      return response;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (city) {\n      console.log(' this is the data im fetching', city);\n      dispatch(itemsFetchDataSuccess(city));\n    }).catch(function () {\n      return dispatch(itemsHasErrored(true));\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\lesca\\Desktop\\mytinerary\\client\\src\\store\\actions\\itineraryActions.js"],"names":["fetch","itemsHasErrored","bool","type","hasErrored","itemsIsLoading","isLoading","itemsFetchDataSuccess","cities","city","fetchCities","url","dispatch","then","response","ok","Error","statusText","json","console","log","catch"],"mappings":"AACA,OAAOA,KAAP,MAAkB,aAAlB;AAIA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAE,mBADH;AAEHC,IAAAA,UAAU,EAAEF;AAFT,GAAP;AAID;AACD,OAAO,SAASG,cAAT,CAAwBH,IAAxB,EAA8B;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAE,kBADH;AAEHG,IAAAA,SAAS,EAAEJ;AAFR,GAAP;AAID;AACD,OAAO,SAASK,qBAAT,CAA+BC,MAA/B,EAAuC;AAC5C,SAAO;AACHL,IAAAA,IAAI,EAAE,0BADH;AAEHM,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAID;AAKD,OAAO,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AAC/B,SAAO,UAACC,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAACP,cAAc,CAAC,IAAD,CAAf,CAAR;AACAL,IAAAA,KAAK,CAACW,GAAD,CAAL,CACKE,IADL,CACU,UAACC,QAAD,EAAc;AAChB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,cAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AACDL,MAAAA,QAAQ,CAACP,cAAc,CAAC,KAAD,CAAf,CAAR;AACA,aAAOS,QAAP;AACH,KAPL,EAQKD,IARL,CAQU,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACI,IAAT,EAAd;AAAA,KARV,EASKL,IATL,CASU,UAACJ,IAAD,EAAU;AACdU,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA4CX,IAA5C;AACAG,MAAAA,QAAQ,CAACL,qBAAqB,CAACE,IAAD,CAAtB,CAAR;AAAsC,KAX5C,EAYKY,KAZL,CAYW;AAAA,aAAMT,QAAQ,CAACX,eAAe,CAAC,IAAD,CAAhB,CAAd;AAAA,KAZX;AAaH,GAfD;AAgBD","sourcesContent":["\r\nimport fetch from 'cross-fetch';\r\n\r\n\r\n\r\nexport function itemsHasErrored(bool) {\r\n  return {\r\n      type: 'ITEMS_HAS_ERRORED',\r\n      hasErrored: bool\r\n  };\r\n}\r\nexport function itemsIsLoading(bool) {\r\n  return {\r\n      type: 'ITEMS_IS_LOADING',\r\n      isLoading: bool\r\n  };\r\n}\r\nexport function itemsFetchDataSuccess(cities) {\r\n  return {\r\n      type: 'ITEMS_FETCH_DATA_SUCCESS',\r\n      city\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\nexport function fetchCities(url) {\r\n  return (dispatch) => {\r\n      dispatch(itemsIsLoading(true));\r\n      fetch(url)\r\n          .then((response) => {\r\n              if (!response.ok) {\r\n                  throw Error(response.statusText);\r\n              }\r\n              dispatch(itemsIsLoading(false));\r\n              return response;\r\n          })\r\n          .then((response) => response.json())\r\n          .then((city) => {\r\n            console.log(' this is the data im fetching',city)\r\n            dispatch(itemsFetchDataSuccess(city))})\r\n          .catch(() => dispatch(itemsHasErrored(true)));\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}