{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\node_modules\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\node_modules\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\node_modules\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\node_modules\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\node_modules\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\src\\\\components\\\\Cities.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../store/actions/actions2';\n\nvar Cities =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cities, _React$Component);\n\n  function Cities(props) {\n    var _this;\n\n    _classCallCheck(this, Cities);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cities).call(this, props));\n    _this.state = {\n      searchValue: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Cities, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"This is the cities page\"));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchData();\n    }\n  }]);\n\n  return Cities;\n}(React.Component); // we take the state and map it to the props of this component\n//with sttae we get acces to the state of the store\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cities\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchData: function fetchData() {\n      return dispatch(actionCreator.getCitiesData());\n    }\n  };\n}; //connect is a function that return a higher oder componets and wraps our Cities component.\n// we pass mapstatetoprops to our connect, so when when we connect to redux\n//knows what data we want to grab from redux and the prop we wnat to create to apply this data to it\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);","map":{"version":3,"sources":["C:\\Users\\lesca\\Desktop\\mytinerary\\client\\src\\components\\Cities.js"],"names":["React","Component","connect","actionCreator","Cities","props","state","searchValue","fetchData","mapStateToProps","cities","mapDispatchToProps","dispatch","getCitiesData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAMC,aAAb,MAAiC,2BAAjC;;IAGMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAFe;AAKlB;;;;6BAEO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ;AAKH;;;wCACmB;AAChB,WAAKF,KAAL,CAAWG,SAAX;AACF;;;;EAjBeR,KAAK,CAACC,S,GAoB3B;AACA;;;AAGA,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAW;AAC3B,SAAO;AACLI,IAAAA,MAAM,EAAEJ,KAAK,CAACI;AADT,GAAP;AAGD,CAJP;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAM;AACFJ,IAAAA,SAAS,EAAG;AAAA,aAAMI,QAAQ,CAACT,aAAa,CAACU,aAAd,EAAD,CAAd;AAAA;AADV,GAAN;AAIH,CALD,C,CAWA;AACA;AACA;;;AACA,eAAeX,OAAO,CAACO,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CP,MAA5C,CAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as  actionCreator  from '../store/actions/actions2';\r\n\r\n\r\nclass Cities extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            searchValue: \"\",\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>This is the cities page</h1>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchData();\r\n     }\r\n}\r\n\r\n// we take the state and map it to the props of this component\r\n//with sttae we get acces to the state of the store\r\n\r\n\r\nconst mapStateToProps = (state) => {  \r\n        return {\r\n          cities: state.cities\r\n        };\r\n      }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        fetchData : () => dispatch(actionCreator.getCitiesData())\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//connect is a function that return a higher oder componets and wraps our Cities component.\r\n// we pass mapstatetoprops to our connect, so when when we connect to redux\r\n//knows what data we want to grab from redux and the prop we wnat to create to apply this data to it\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cities);"]},"metadata":{},"sourceType":"module"}