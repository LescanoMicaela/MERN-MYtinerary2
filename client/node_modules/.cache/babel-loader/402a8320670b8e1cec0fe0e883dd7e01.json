{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\node_modules\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar initState = {\n  cities: [],\n  hasErrored: false,\n  isLoading: false,\n  itinerary: [],\n  itineraryIsLoading: false,\n  itineraryHasErrored: false //we create a root reducer, in a big application we would have more than one reduce\n  // we always pass state and action as parameters.\n  // we pass a default parameter of init state\n\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var newState = _objectSpread({}, state);\n\n  if (action.type === 'ITEMS_HAS_ERRORED') {\n    newState.hasErrored = action.hasErrored;\n  }\n\n  if (action.type === 'ITEMS_IS_LOADING') {\n    newState.isLoading = action.isLoading;\n  }\n\n  if (action.type === 'ITEMS_FETCH_DATA_SUCCESS') {\n    newState.cities = action.cities;\n  }\n\n  if (action.type === 'ITINERARY_IS_LOADING') {\n    newState.isLoading = action.itineraryIsLoading;\n  }\n\n  if (action.type === 'ITINERARY_FETCH_DATA_SUCCESS') {\n    newState.itinerary = action.itinerary;\n  }\n\n  if (action.type === 'ITINERARY_HAS_ERRORED') {\n    newState.itineraryHasErrored = action.itineraryHasErrored;\n  }\n\n  return newState;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:\\Users\\lesca\\Desktop\\mytinerary\\client\\src\\store\\reducers\\rootReducer.js"],"names":["initState","cities","hasErrored","isLoading","itinerary","itineraryIsLoading","itineraryHasErrored","rootReducer","state","action","newState","type"],"mappings":";AAAA,IAAMA,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE,EADM;AAEdC,EAAAA,UAAU,EAAE,KAFE;AAGdC,EAAAA,SAAS,EAAG,KAHE;AAIdC,EAAAA,SAAS,EAAC,EAJI;AAKdC,EAAAA,kBAAkB,EAAE,KALN;AAMdC,EAAAA,mBAAmB,EAAE,KANP,CASlB;AACA;AACA;;AAXkB,CAAlB;;AAaA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA8B;AAAA,MAA7BC,KAA6B,uEAArBR,SAAqB;AAAA,MAAXS,MAAW;;AAC9C,MAAMC,QAAQ,qBAAOF,KAAP,CAAd;;AACA,MAAKC,MAAM,CAACE,IAAP,KAAgB,mBAArB,EAA0C;AAClCD,IAAAA,QAAQ,CAACR,UAAT,GAAsBO,MAAM,CAACP,UAA7B;AACP;;AACD,MAAKO,MAAM,CAACE,IAAP,KAAgB,kBAArB,EAAyC;AACjCD,IAAAA,QAAQ,CAACP,SAAT,GAAqBM,MAAM,CAACN,SAA5B;AAEP;;AACD,MAAKM,MAAM,CAACE,IAAP,KAAgB,0BAArB,EAAgD;AACxCD,IAAAA,QAAQ,CAACT,MAAT,GAAkBQ,MAAM,CAACR,MAAzB;AACH;;AAEL,MAAKQ,MAAM,CAACE,IAAP,KAAgB,sBAArB,EAA6C;AACzCD,IAAAA,QAAQ,CAACP,SAAT,GAAqBM,MAAM,CAACJ,kBAA5B;AAEH;;AACD,MAAKI,MAAM,CAACE,IAAP,KAAgB,8BAArB,EAAoD;AAChDD,IAAAA,QAAQ,CAACN,SAAT,GAAqBK,MAAM,CAACL,SAA5B;AACH;;AAGD,MAAKK,MAAM,CAACE,IAAP,KAAgB,uBAArB,EAA8C;AAC1CD,IAAAA,QAAQ,CAACJ,mBAAT,GAA+BG,MAAM,CAACH,mBAAtC;AAEH;;AACD,SAAOI,QAAP;AACH,CA3BD;;AAkCA,eAAeH,WAAf","sourcesContent":["const initState = {\r\n    cities: [],\r\n    hasErrored: false,\r\n    isLoading : false,\r\n    itinerary:[],\r\n    itineraryIsLoading: false,\r\n    itineraryHasErrored: false,\r\n}\r\n\r\n//we create a root reducer, in a big application we would have more than one reduce\r\n// we always pass state and action as parameters.\r\n// we pass a default parameter of init state\r\n\r\nconst rootReducer = (state = initState,action) => {\r\n    const newState = {...state};\r\n    if ( action.type === 'ITEMS_HAS_ERRORED') {      \r\n            newState.hasErrored = action.hasErrored  \r\n    }\r\n    if ( action.type === 'ITEMS_IS_LOADING') { \r\n            newState.isLoading = action.isLoading\r\n    \r\n    }\r\n    if ( action.type === 'ITEMS_FETCH_DATA_SUCCESS'){\r\n            newState.cities = action.cities\r\n        } \r\n       \r\n    if ( action.type === 'ITINERARY_IS_LOADING') { \r\n        newState.isLoading = action.itineraryIsLoading\r\n\r\n    }\r\n    if ( action.type === 'ITINERARY_FETCH_DATA_SUCCESS'){\r\n        newState.itinerary = action.itinerary\r\n    } \r\n \r\n   \r\n    if ( action.type === 'ITINERARY_HAS_ERRORED') {      \r\n        newState.itineraryHasErrored = action.itineraryHasErrored \r\n    \r\n    }\r\n    return newState; \r\n}\r\n\r\n   \r\n\r\n\r\n \r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}