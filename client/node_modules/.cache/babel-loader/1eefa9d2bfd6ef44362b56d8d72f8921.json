{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lesca\\\\Desktop\\\\mytinerary\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'; // we import provider to connect store to our app\n// will wrap the App component.\n\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { loadCities } from './store/actions/actions2'; // we kick-start the app and render to dom, so we create store here.\n// we relate the reducer with store and provider will relate it to our app\n// we pass our store in the provider and wrap our app inside the provider component.\n\nvar store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\nstore.dispatch(loadCities());\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\Users\\lesca\\Desktop\\mytinerary\\client\\src\\index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","composeWithDevTools","thunk","Provider","rootReducer","loadCities","store","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,kCAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;AACA;;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAGA;AACA;AACA;;AAEA,IAAMC,KAAK,GAAGP,WAAW,CAACK,WAAD,EAAcH,mBAAmB,CAC1DD,eAAe,CAACE,KAAD,CAD2C,CAAjC,CAAzB;AAIAI,KAAK,CAACC,QAAN,CAAeF,UAAU,EAAzB;AAEAT,QAAQ,CAACY,MAAT,CAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB,CAAhB,EAA4DG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5D,E,CAEA;AACA;AACA;;AACAZ,aAAa,CAACa,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\n// we import provider to connect store to our app\n// will wrap the App component.\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport { loadCities } from './store/actions/actions2';\n\n\n// we kick-start the app and render to dom, so we create store here.\n// we relate the reducer with store and provider will relate it to our app\n// we pass our store in the provider and wrap our app inside the provider component.\n\nconst store = createStore(rootReducer, composeWithDevTools(\napplyMiddleware(thunk)\n));\n\nstore.dispatch(loadCities());\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}